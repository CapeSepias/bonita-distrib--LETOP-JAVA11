var app = angular.module('autogeneratedForm');

app.controller('SimpleCtrl', ['$scope', function ($scope) {
        $scope.initSingleInput = function initSingleInput(input) {
            $scope.parent[input.name]=null;
            $scope.outputData = $scope.parent;
            $scope.autofill[input.name] = $scope.generateValue(input);
        };
    }]
);

app.controller('MultipleCtrl', ['$scope', function ($scope) {
    $scope.initMultipleInput = function initMultipleInput(input) {
        $scope.autofill[input.name] = [$scope.generateValue(input)];
    };

    $scope.appendNewInput = function appendNewInput(input){

        var newInput = {
            type: input.type,
            description: input.description,
            name: input.name,
            multiple: input.multiple,
            inputs: input.inputs
        };
        $scope.inputArray.push(newInput);
        $scope.autofill[input.name].push($scope.generateValue(input));
    };

    $scope.removeInput = function removeInput (input, index){
        $scope.inputArray.splice(index, 1);
        $scope.outputData.splice(index, 1);
        $scope.autofill[input.name].splice(index, 1);
    };

    $scope.hasSeveralItemsInCollection = function hasSeveralItemsInCollection(input) {
        return ($scope.inputArray.length>1);
    };
}]);

app.controller('MultipleFilesCtrl', ['$scope', function ($scope) {
    $scope.onUploadSuccess = function onUploadSuccess(response, input, $index) {
        if(input.multiple){
            $scope.outputData[$index] = response;
        }else{
            if(angular.isObject(response)) {

                for (var prop in response) {
                    // make a copy of properties to avoid messing up with references
                    $scope.outputData[prop] = response[prop];
                }

            } else {
                console.log('Got an error from API, cannot assign file input!', response);
                // debug when displaying scope.
                $scope.outputData.debug = response;

            }

        }
    };

    $scope.appendNewInput = function appendNewInput(input){
        var newInput = {
            type: input.type,
            description: input.description,
            name: input.name,
            multiple: input.multiple,
            inputs: input.inputs
        };
        $scope.inputArray.push(newInput);
    };

    $scope.removeInput = function removeInput (input, index){
        $scope.inputArray.splice(index, 1);
        $scope.outputData.splice(index, 1);
    };
}]);