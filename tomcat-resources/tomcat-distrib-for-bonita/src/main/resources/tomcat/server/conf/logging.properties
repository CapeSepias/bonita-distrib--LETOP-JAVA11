# By default, logs are sent to console and bonita logs
# For production you should remove ConsoleHandler (information are already available in bonita logs)
handlers = java.util.logging.ConsoleHandler, 1bonita.org.apache.juli.AsyncFileHandler
# Add the additional logger below to redirect monitoring logs to a specific file. Also uncomment line 'org.bonitasoft.engine.configuration.monitoring.LoggingMeterRegistry.handlers' below:
#, 2monitoring.org.apache.juli.AsyncFileHandler

# default handlers, associated to loggers if not overridden
.handlers = java.util.logging.ConsoleHandler, 1bonita.org.apache.juli.AsyncFileHandler

# Log format looks like this
# 2017-05-11 12:09:10.201 +0200 INFOS: org.bonitasoft.platform.configuration.util.AllConfigurationResourceVisitor found file: tenant_template_engine/bonita-tenants-custom.xml
java.util.logging.SimpleFormatter.format=%1$tF %1$tT.%1$tL %1$tz %4$s: %3$s %5$s%6$s%n

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Definition of the Bonita logs handler
1bonita.org.apache.juli.AsyncFileHandler.level = ALL
1bonita.org.apache.juli.AsyncFileHandler.directory = ${catalina.base}/logs
1bonita.org.apache.juli.AsyncFileHandler.prefix = bonita.
# Use this formatter to see the thread name in the logs
1bonita.org.apache.juli.AsyncFileHandler.formatter = org.apache.juli.BonitaSimpleFormatter

# Specific log handler for Runtime Monitoring
2monitoring.org.apache.juli.AsyncFileHandler.level = ALL
2monitoring.org.apache.juli.AsyncFileHandler.directory = ${catalina.base}/logs
2monitoring.org.apache.juli.AsyncFileHandler.prefix = bonitaMonitoring.
2monitoring.org.apache.juli.AsyncFileHandler.formatter = java.util.logging.SimpleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

org.apache.catalina.core.ContainerBase.[Catalina].[localhost].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/bonita].level = INFO

#############################################################################################
##### DO NOT MODIFY THIS LINE, IT IS USED TO ADAPT THE FILE TO THE DOCKER IMAGE VERSION #####
#############################################################################################

# Custom formatter to be able to see thread name in the log (thread name available at position 7)
org.apache.juli.BonitaSimpleFormatter.format=%1$tF %1$tT.%1$tL %1$tz %4$s (%7$s) %3$s %5$s%6$s%n
# Produced logs
# 2019-11-07 17:37:16.474 +0100 INFOS (localhost-startStop-1) org.bonitasoft.engine.scheduler.impl.BonitaSchedulerFactory Using default implementation for ThreadExecutor

# For example, set the org.apache.catalina.util.LifecycleBase logger to log
# each component that extends LifecycleBase changing state:
#org.apache.catalina.util.LifecycleBase.level = FINE

# To see debug messages in TldLocationsCache, uncomment the following line:
#org.apache.jasper.compiler.TldLocationsCache.level = FINE

# To see debug messages for HTTP/2 handling, uncomment the following line:
#org.apache.coyote.http2.level = FINE

# To see debug messages for WebSocket handling, uncomment the following line:
#org.apache.tomcat.websocket.level = FINE

# To associate Bonita Monitoring logs to a specific file:
# org.bonitasoft.engine.configuration.monitoring.LoggingMeterRegistry.handlers = 2monitoring.org.apache.juli.AsyncFileHandler

org.bonitasoft.level = INFO

com.arjuna.level = INFO
org.jboss.narayana.tomcat.jta.level = FINE

# At platform initial setup, activate FINE messages on what is happening:
org.bonitasoft.platform.level = INFO

org.bonitasoft.engine.EngineInitializer.level = INFO

# If you want to have more log on connectors execution only, you can activate and modify the following lines
#org.bonitasoft.engine.core.connector.level = FINE
#org.bonitasoft.engine.connector.level = FINE

# If you want to have more log on expressions only, you can activate and modify the following lines
#org.bonitasoft.engine.expression.level = FINE
#org.bonitasoft.engine.data.instance.api.DataExpressionExecutorStrategy.level = FINE

# If you want to have more log on input/output of API calls, you can activate and modify the following line
#org.bonitasoft.engine.api.level = FINEST

# If you want to have more log on Asynchronous executions (Work/Job), you can activate and modify the following lines
#org.bonitasoft.engine.work.level = FINE
#org.bonitasoft.engine.execution.work.level = FINE
#org.bonitasoft.engine.job.level = FINE
#org.bonitasoft.engine.jobs.level = FINE
#org.bonitasoft.engine.scheduler.level = FINE
# Specific logger for auditing work execution
BONITA_WORK_AUDIT.EXECUTION.level = INFO

# If you want to deactivate warnings on wrong handling of transient data
#org.bonitasoft.engine.operation.TransientDataLeftOperandHandler.level = SEVERE
#org.bonitasoft.engine.expression.ReevaluatingTransientDataExpressionExecutorStrategy.level = SEVERE

# Hibernate is used by Bonita and very verbose in the log. Should stay with WARNING level except when debugging database access issues
org.hibernate.level = WARNING
# Remove wrong warnings about ehcache:
org.hibernate.orm.cache.level = SEVERE
# enable tracking of slow execution queries:
org.hibernate.SQL_SLOW.level = INFO

# Ehcache is used by Bonita and very verbose in the log.  Should stay with WARNING level except when debugging cache issues
net.sf.ehcache.level = WARNING

# Deactivate annoying false warning:
org.hibernate.type.TypeFactory.level = SEVERE

org.springframework.level = WARNING
org.bonitasoft.engine.service.impl.BonitaSpringContext.level = WARNING

# tuckey
org.tuckey.level = WARNING

# keycloak
#org.keycloak.level = ALL
#class\ org.keycloak.level = ALL

# If you want to have more log on rest api extension provided logger, you can activate and modify the following lines
#org.bonitasoft.api.extension.level = FINE


#######################################################
## Subscription edition specific logging configuration:
#######################################################
com.bonitasoft.level = INFO
# If you want to have logs on execution time performance for BDM filtering, you can activate the following line:
#com.bonitasoft.engine.business.data.impl.level = FINEST
# If you want to have more log on input/output of API calls, you can activate and modify the following line
#com.bonitasoft.engine.api.level = FINEST
# Display monitoring information when property 'org.bonitasoft.engine.monitoring.publisher.logging.enable' is set to true in configuration file 'bonita-platform-sp-custom.properties'
com.bonitasoft.engine.configuration.monitoring.LoggingMeterRegistry.level = INFO
